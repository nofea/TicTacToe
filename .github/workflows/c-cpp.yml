name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Install dependency 
      id: install_dependency
      run: sudo apt install mingw-w64

    - name: Check Out
      id: check_out
      uses: actions/checkout@v2
    
    - name: Make
      id: make
      run: make all

  release:
    if: github.event_name == 'push'
    needs: [ build ]
    strategy:
      matrix: 
        executable: [out, exe]
    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: true
        prerelease: false

    - name: Upload Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build_linux/tictactoe.${{matrix.executable}}
        asset_name: tictactoe.${{matrix.executable}}
        asset_content_type: application
    